{"AWSTemplateFormatVersion": "2010-09-09", "Description": "CloudFormation template for a custom date macro that provides functions for date manipulation.", "Resources": {"DateMacroFunction": {"Type": "AWS::Lambda::Function", "Properties": {"Handler": "index.handler", "Role": {"Fn::GetAtt": ["LambdaExecutionRole", "Arn"]}, "Code": {"ZipFile": {"Fn::Join": ["", ["import json\n", "from datetime import datetime, timedelta\n", "def handler(event, context):\n", "    parameters = event.get('params', {})\n", "    current_date = datetime.now()\n", "    if parameters.get('operation') == 'currentDate':\n", "        return {'result': current_date.strftime(parameters.get('format', '%Y-%m-%d'))}\n", "    elif parameters.get('operation') == 'addDays':\n", "        result_date = current_date + timedelta(days=parameters.get('days', 0))\n", "        return {'result': result_date.strftime(parameters.get('format', '%Y-%m-%d'))}\n", "    else:\n", "        return {'error': 'Unsupported operation'}\n"]]}}, "Runtime": "python3.8", "Timeout": 30}}, "LambdaExecutionRole": {"Type": "AWS::IAM::Role", "Properties": {"AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "lambda.amazonaws.com"}, "Action": "sts:AssumeRole"}]}, "Policies": [{"PolicyName": "lambda-execution-policy", "PolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"], "Resource": "*"}]}}]}}, "DateMacro": {"Type": "AWS::CloudFormation::Macro", "Properties": {"Name": "DateMacro", "FunctionName": {"Fn::GetAtt": ["DateMacroFunction", "Arn"]}}}}}