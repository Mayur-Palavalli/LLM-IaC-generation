{"AWSTemplateFormatVersion": "2010-09-09", "Description": "AWS CloudFormation Template for a multi-az, load balanced and Auto Scaled Apache Web Server", "Parameters": {"InstanceType": {"Type": "String", "Default": "t2.micro", "AllowedValues": ["t2.micro", "t2.small", "t2.medium", "t2.large"], "Description": "EC2 instance type"}, "AMI": {"Type": "AWS::EC2::Image::Id", "Description": "Amazon Machine Image (AMI) ID"}, "OperatorEmail": {"Type": "String", "Description": "Email address for notifications"}, "VPC": {"Type": "AWS::EC2::VPC::Id", "Description": "VPC"}, "Subnets": {"Type": "List<AWS::EC2::Subnet::Id>", "Description": "The list of SubnetIds in your Virtual Private Cloud (VPC)", "ConstraintDescription": "must be a list of existing SubnetIds."}}, "Resources": {"WebServerSecurityGroup": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Enable HTTP access on port 80 and SSH access on port 22", "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "0.0.0.0/0"}, {"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "0.0.0.0/0"}]}}, "WebServerLaunchConfiguration": {"Type": "AWS::AutoScaling::LaunchConfiguration", "Properties": {"ImageId": {"Ref": "AMI"}, "InstanceType": {"Ref": "InstanceType"}, "SecurityGroups": [{"Ref": "WebServerSecurityGroup"}], "UserData": {"Fn::Base64": {"Fn::Join": ["", ["#!/bin/bash\n", "yum update -y\n", "yum install -y httpd\n", "systemctl start httpd\n", "systemctl enable httpd\n", "echo \"<h1>Sample Web Server</h1>\" > /var/www/html/index.html\n"]]}}}}, "WebServerAutoScalingGroup": {"Type": "AWS::AutoScaling::AutoScalingGroup", "Properties": {"VPCZoneIdentifier": {"Ref": "Subnets"}, "LaunchConfigurationName": {"Ref": "WebServerLaunchConfiguration"}, "MinSize": "1", "MaxSize": "5", "DesiredCapacity": "1", "TargetGroupARNs": [{"Ref": "WebServerTargetGroup"}], "Tags": [{"Key": "Name", "Value": "WebServer", "PropagateAtLaunch": "true"}]}}, "WebServerScalingPolicyUp": {"Type": "AWS::AutoScaling::ScalingPolicy", "Properties": {"AdjustmentType": "ChangeInCapacity", "AutoScalingGroupName": {"Ref": "WebServerAutoScalingGroup"}, "Cooldown": "300", "ScalingAdjustment": "1"}}, "WebServerScalingPolicyDown": {"Type": "AWS::AutoScaling::ScalingPolicy", "Properties": {"AdjustmentType": "ChangeInCapacity", "AutoScalingGroupName": {"Ref": "WebServerAutoScalingGroup"}, "Cooldown": "300", "ScalingAdjustment": "-1"}}, "WebServerCPUAlarmHigh": {"Type": "AWS::CloudWatch::Alarm", "Properties": {"AlarmDescription": "Scale up if CPU > 70% for 5 minutes", "MetricName": "CPUUtilization", "Namespace": "AWS/EC2", "Statistic": "Average", "Period": "300", "EvaluationPeriods": "1", "Threshold": "70", "ComparisonOperator": "GreaterThanThreshold", "AlarmActions": [{"Ref": "WebServerScalingPolicyUp"}], "Dimensions": [{"Name": "AutoScalingGroupName", "Value": {"Ref": "WebServerAutoScalingGroup"}}]}}, "WebServerCPUAlarmLow": {"Type": "AWS::CloudWatch::Alarm", "Properties": {"AlarmDescription": "Scale down if CPU < 30% for 5 minutes", "MetricName": "CPUUtilization", "Namespace": "AWS/EC2", "Statistic": "Average", "Period": "300", "EvaluationPeriods": "1", "Threshold": "30", "ComparisonOperator": "LessThanThreshold", "AlarmActions": [{"Ref": "WebServerScalingPolicyDown"}], "Dimensions": [{"Name": "AutoScalingGroupName", "Value": {"Ref": "WebServerAutoScalingGroup"}}]}}, "WebServerNotificationTopic": {"Type": "AWS::SNS::Topic", "Properties": {"Subscription": [{"Endpoint": {"Ref": "OperatorEmail"}, "Protocol": "email"}]}}, "WebServerTargetGroup": {"Type": "AWS::ElasticLoadBalancingV2::TargetGroup", "Properties": {"Port": 80, "Protocol": "HTTP", "VpcId": {"Ref": "VPC"}, "HealthCheckProtocol": "HTTP", "HealthCheckPort": "80", "HealthCheckPath": "/", "Matcher": {"HttpCode": "200"}, "TargetType": "instance"}}, "WebServerLoadBalancer": {"Type": "AWS::ElasticLoadBalancingV2::LoadBalancer", "Properties": {"Scheme": "internet-facing", "Subnets": {"Ref": "Subnets"}, "SecurityGroups": [{"Ref": "WebServerSecurityGroup"}]}}, "WebServerListener": {"Type": "AWS::ElasticLoadBalancingV2::Listener", "Properties": {"DefaultActions": [{"Type": "forward", "TargetGroupArn": {"Ref": "WebServerTargetGroup"}}], "LoadBalancerArn": {"Ref": "WebServerLoadBalancer"}, "Port": 80, "Protocol": "HTTP"}}}, "Outputs": {"LoadBalancerDNSName": {"Description": "The DNS name of the load balancer", "Value": {"Fn::GetAtt": ["WebServerLoadBalancer", "DNSName"]}}}}