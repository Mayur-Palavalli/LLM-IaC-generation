{"AWSTemplateFormatVersion": "2010-09-09", "Description": "CloudFormation template for date macro including current date and date math functionality.", "Resources": {"DateMacroFunction": {"Type": "AWS::Lambda::Function", "Properties": {"Handler": "index.handler", "Runtime": "python3.8", "Code": {"ZipFile": {"Fn::Join": ["\n", ["import json", "from datetime import datetime, timedelta", "def handler(event, context):", "    fragment = event['fragment']", "    if 'CurrentDate' in fragment:", "        now = datetime.utcnow().strftime('%Y-%m-%d')", "        fragment['CurrentDate'] = now", "    if 'DateMath' in fragment:", "        date_str = fragment['DateMath'].get('StartDate', datetime.utcnow().strftime('%Y-%m-%d'))", "        days = fragment['DateMath'].get('Days', 0)", "        modified_date = datetime.strptime(date_str, '%Y-%m-%d') + timedelta(days=days)", "        fragment['DateMath'] = modified_date.strftime('%Y-%m-%d')", "    return {", "        'requestId': event['requestId'],", "        'status': 'success',", "        'fragment': fragment", "    }"]]}}, "Role": {"Fn::GetAtt": ["LambdaExecutionRole", "Arn"]}}}, "LambdaExecutionRole": {"Type": "AWS::IAM::Role", "Properties": {"AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "lambda.amazonaws.com"}, "Action": "sts:AssumeRole"}]}, "Policies": [{"PolicyName": "LambdaBasicExecution", "PolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"], "Resource": "*"}]}}]}}, "DateMacro": {"Type": "AWS::CloudFormation::Macro", "Properties": {"Name": "DateMacro", "FunctionName": {"Ref": "DateMacroFunction"}}}}}