{"AWSTemplateFormatVersion": "2010-09-09", "Resources": {"DateMacroFunction": {"Type": "AWS::Lambda::Function", "Properties": {"Handler": "index.handler", "Role": {"Fn::GetAtt": ["LambdaExecutionRole", "Arn"]}, "Code": {"ZipFile": {"Fn::Join": ["\n", ["import json", "from datetime import datetime, timedelta", "def handler(event, context):", "    params = event[\"params\"]", "    if 'current_date' in params:", "        response = datetime.now().strftime('%Y-%m-%d')", "    elif 'add_days' in params:", "        days = params['add_days']", "        response = (datetime.now() + timedelta(days=days)).strftime('%Y-%m-%d')", "    else:", "        response = 'Invalid Operation'", "    return {", "        'statusCode': 200,", "        'body': json.dumps({'result': response})", "    }"]]}}, "Runtime": "python3.9", "Timeout": 30}}, "LambdaExecutionRole": {"Type": "AWS::IAM::Role", "Properties": {"AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "lambda.amazonaws.com"}, "Action": "sts:AssumeRole"}]}, "Policies": [{"PolicyName": "LambdaExecutionPolicy", "PolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"], "Resource": "*"}]}}]}}, "DateMacro": {"Type": "AWS::CloudFormation::Macro", "Properties": {"Name": "DateMacro", "FunctionName": {"Fn::GetAtt": ["DateMacroFunction", "Arn"]}}}}}