{"AWSTemplateFormatVersion": "2010-09-09", "Resources": {"DynamoDBTables": {"Type": "AWS::CloudFormation::CustomResource", "Properties": {"ServiceToken": {"Fn::GetAtt": ["CFNLambda", "Arn"]}, "Tables": [{"Name": "Table1", "AttributeDefinitions": [{"AttributeName": "Id", "AttributeType": "S"}], "KeySchema": [{"AttributeName": "Id", "KeyType": "HASH"}], "ProvisionedThroughput": {"ReadCapacityUnits": 5, "WriteCapacityUnits": 5}}, {"Name": "Table2", "AttributeDefinitions": [{"AttributeName": "Id", "AttributeType": "S"}], "KeySchema": [{"AttributeName": "Id", "KeyType": "HASH"}], "ProvisionedThroughput": {"ReadCapacityUnits": 5, "WriteCapacityUnits": 5}}]}}, "CFNLambda": {"Type": "AWS::Lambda::Function", "Properties": {"Handler": "index.handler", "Role": "arn:aws:iam::123456789012:role/lambda-role", "Code": {"ZipFile": {"Fn::Join": ["\n", ["var response = require('cfn-response');", "exports.handler = function(event, context) {", "  try {", "    var AWS = require('aws-sdk');", "    var dynamodb = new AWS.DynamoDB();", "    var tables = event.ResourceProperties.Tables;", "    tables.forEach(function(table) {", "      var params = {", "        TableName: table.Name,", "        AttributeDefinitions: table.AttributeDefinitions,", "        KeySchema: table.KeySchema,", "        ProvisionedThroughput: table.ProvisionedThroughput", "      };", "      dynamodb.createTable(params, function(err, data) {", "        if (err) {", "          console.log('Error', err);", "        } else {", "          console.log('Table Created', data);", "        }", "      });", "    });", "    response.send(event, context, response.SUCCESS);", "  } catch (e) {", "    response.send(event, context, response.FAILED);", "  }", "};"]]}}, "Runtime": "nodejs20.x"}}}}