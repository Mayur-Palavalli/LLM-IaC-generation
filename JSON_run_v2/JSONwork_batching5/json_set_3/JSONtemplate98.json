{"AWSTemplateFormatVersion": "2010-09-09", "Description": "AWS CloudFormation template for a load balanced, Auto Scaled sample website where the instances are locked down to only accept traffic from the load balancer. The web site is available on port 80, but instances listen on port 8888.", "Resources": {"WebServerSecurityGroup": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Enable HTTP access via port 8888", "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": "8888", "ToPort": "8888", "SourceSecurityGroupId": {"Ref": "LoadBalancerSecurityGroup"}}]}}, "LoadBalancerSecurityGroup": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Enable HTTP access via port 80", "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "0.0.0.0/0"}]}}, "ElasticLoadBalancer": {"Type": "AWS::ElasticLoadBalancing::LoadBalancer", "Properties": {"Listeners": [{"LoadBalancerPort": "80", "InstancePort": "8888", "Protocol": "HTTP"}], "HealthCheck": {"Target": "HTTP:8888/", "HealthyThreshold": "3", "UnhealthyThreshold": "5", "Interval": "30", "Timeout": "5"}, "SecurityGroups": [{"Ref": "LoadBalancerSecurityGroup"}], "Subnets": [{"Ref": "SubnetId"}]}}, "LaunchConfiguration": {"Type": "AWS::AutoScaling::LaunchConfiguration", "Properties": {"ImageId": "ami-0c55b159cbfafe1f0", "InstanceType": "t2.micro", "SecurityGroups": [{"Ref": "WebServerSecurityGroup"}], "UserData": {"Fn::Base64": {"Fn::Join": ["", ["#!/bin/bash\n", "sudo yum update -y\n", "sudo yum install -y httpd\n", "sudo systemctl start httpd\n", "sudo systemctl enable httpd\n", "echo \"<h1>Welcome to My Website</h1>\" > /var/www/html/index.html\n", "sudo iptables -A INPUT -p tcp -m tcp --dport 8888 -j ACCEPT\n", "sudo iptables -A INPUT -p tcp -j REJECT --reject-with tcp-reset\n"]]}}}}, "AutoScalingGroup": {"Type": "AWS::AutoScaling::AutoScalingGroup", "Properties": {"LaunchConfigurationName": {"Ref": "LaunchConfiguration"}, "MinSize": "1", "MaxSize": "3", "DesiredCapacity": "2", "VPCZoneIdentifier": [{"Ref": "SubnetId"}], "TargetGroupARNs": [], "Tags": [{"Key": "Name", "Value": "WebServer", "PropagateAtLaunch": "true"}]}}}, "Parameters": {"SubnetId": {"Type": "AWS::EC2::Subnet::Id", "Description": "SubnetId of an existing subnet (for the load balancer and the instances)"}}, "Outputs": {"WebsiteURL": {"Description": "URL for the website", "Value": {"Fn::Join": ["", ["http://", {"Fn::GetAtt": ["ElasticLoadBalancer", "DNSName"]}]]}}}}