{"AWSTemplateFormatVersion": "2010-09-09", "Description": "AWS CloudFormation template to create an AD Connector to connect to an on-premises directory and associated resources.", "Parameters": {"VpcId": {"Type": "AWS::EC2::VPC::Id", "Description": "The VPC id to which the AD Connector is associated."}, "SubnetIds": {"Type": "List<AWS::EC2::Subnet::Id>", "Description": "List of subnet ids for the AD Connector."}, "DnsIpAddresses": {"Type": "List<String>", "Description": "IP addresses of the on-premises DNS servers."}, "DomainName": {"Type": "String", "Description": "Fully qualified domain name of the on-premises directory."}, "DomainDnsName": {"Type": "String", "Description": "DNS domain name of the on-premises directory."}, "CreateSeamlessDomainJoin": {"Type": "String", "AllowedValues": ["true", "false"], "Description": "Option to create seamless domain join resources for Windows & Linux EC2 instances.", "Default": "false"}, "CreateDomainMembersSecurityGroup": {"Type": "String", "AllowedValues": ["true", "false"], "Description": "Option to create a domain members security group that allows all PrivateIP communications inbound.", "Default": "false"}, "CreateDhcpOptionSet": {"Type": "String", "AllowedValues": ["true", "false"], "Description": "Option to create a DHCP Option Set pointing to Domain DNS servers.", "Default": "false"}, "ADPassword": {"Type": "String", "Description": "Password for the AD Connector.", "NoEcho": true}}, "Resources": {"ADConnector": {"Type": "AWS::DirectoryService::SimpleAD", "Properties": {"Name": {"Ref": "DomainName"}, "Password": {"Ref": "ADPassword"}, "Size": "Small", "VpcSettings": {"VpcId": {"Ref": "VpcId"}, "SubnetIds": {"Ref": "SubnetIds"}}}}, "SeamlessDomainJoin": {"Condition": "CreateSeamlessDomainJoinCondition", "Type": "AWS::SSM::Association", "Properties": {"Name": "AWS-JoinDirectoryServiceDomain", "InstanceId": "i-0123456789abcdef0", "Parameters": {"directoryId": [{"Ref": "ADConnector"}], "directoryName": [{"Ref": "DomainDnsName"}]}}}, "DomainMembersSecurityGroup": {"Condition": "CreateDomainMembersSecurityGroupCondition", "Type": "AWS::EC2::SecurityGroup", "Properties": {"VpcId": {"Ref": "VpcId"}, "GroupDescription": "Security group for domain members allowing all PrivateIP communications inbound.", "SecurityGroupIngress": [{"IpProtocol": "-1", "CidrIp": "0.0.0.0/0"}], "SecurityGroupEgress": [{"IpProtocol": "-1", "CidrIp": "0.0.0.0/0"}]}}, "DHCPOptionSet": {"Condition": "CreateDhcpOptionSetCondition", "Type": "AWS::EC2::DHCPOptions", "Properties": {"DomainName": {"Ref": "DomainDnsName"}, "DomainNameServers": {"Ref": "DnsIpAddresses"}}}, "DHCPConfigAssociation": {"Condition": "CreateDhcpOptionSetCondition", "Type": "AWS::EC2::VPCDHCPOptionsAssociation", "Properties": {"VpcId": {"Ref": "VpcId"}, "DhcpOptionsId": {"Ref": "DHCPOptionSet"}}}}, "Conditions": {"CreateSeamlessDomainJoinCondition": {"Fn::Equals": [{"Ref": "CreateSeamlessDomainJoin"}, "true"]}, "CreateDomainMembersSecurityGroupCondition": {"Fn::Equals": [{"Ref": "CreateDomainMembersSecurityGroup"}, "true"]}, "CreateDhcpOptionSetCondition": {"Fn::Equals": [{"Ref": "CreateDhcpOptionSet"}, "true"]}}}