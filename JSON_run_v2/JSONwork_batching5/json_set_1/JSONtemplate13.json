{"AWSTemplateFormatVersion": "2010-09-09", "Description": "AWS CloudFormation template for a multi-az, load balanced and Auto Scaled Apache Web Server", "Parameters": {"OperatorEmail": {"Type": "String", "Description": "Email address to notify on scaling events"}, "InstanceType": {"Type": "String", "Default": "t2.micro", "Description": "EC2 instance type"}, "KeyName": {"Type": "AWS::EC2::KeyPair::KeyName", "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances", "ConstraintDescription": "must be the name of an existing EC2 KeyPair."}}, "Mappings": {"AWSInstanceType2Arch": {"t2.micro": {"Arch": "HVM64"}, "t2.small": {"Arch": "HVM64"}, "t2.medium": {"Arch": "HVM64"}}, "AWSRegionArch2AMI": {"us-east-1": {"HVM64": "ami-0de53d8956e8dcf80"}, "us-west-1": {"HVM64": "ami-0bdb828fd58c52235"}, "us-west-2": {"HVM64": "ami-035b3c7efe6d061d5"}}}, "Resources": {"WebServerSecurityGroup": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Enable HTTP access on port 80", "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "0.0.0.0/0"}, {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "0.0.0.0/0"}]}}, "WebServerLaunchConfiguration": {"Type": "AWS::AutoScaling::LaunchConfiguration", "Properties": {"ImageId": {"Fn::FindInMap": ["AWSRegionArch2AMI", {"Ref": "AWS::Region"}, {"Fn::FindInMap": ["AWSInstanceType2Arch", {"Ref": "InstanceType"}, "Arch"]}]}, "InstanceType": {"Ref": "InstanceType"}, "KeyName": {"Ref": "KeyName"}, "SecurityGroups": [{"Ref": "WebServerSecurityGroup"}], "UserData": {"Fn::Base64": {"Fn::Join": ["", ["#!/bin/bash\n", "yum update -y\n", "yum install -y httpd\n", "service httpd start\n", "chkconfig httpd on\n"]]}}}}, "WebServerAutoScalingGroup": {"Type": "AWS::AutoScaling::AutoScalingGroup", "Properties": {"AvailabilityZones": {"Fn::GetAZs": ""}, "LaunchConfigurationName": {"Ref": "WebServerLaunchConfiguration"}, "MinSize": "1", "MaxSize": "5", "DesiredCapacity": "2", "HealthCheckType": "EC2", "HealthCheckGracePeriod": 300, "VPCZoneIdentifier": [{"Ref": "SubnetId1"}, {"Ref": "SubnetId2"}], "LoadBalancerNames": [{"Ref": "WebAppELB"}], "Tags": [{"Key": "Name", "Value": "WebServer", "PropagateAtLaunch": "true"}]}}, "WebAppELB": {"Type": "AWS::ElasticLoadBalancing::LoadBalancer", "Properties": {"AvailabilityZones": {"Fn::GetAZs": ""}, "Listeners": [{"LoadBalancerPort": "80", "InstancePort": "80", "Protocol": "HTTP"}], "HealthCheck": {"Target": "HTTP:80/", "HealthyThreshold": "3", "UnhealthyThreshold": "5", "Interval": "30", "Timeout": "5"}, "SecurityGroups": [{"Ref": "WebServerSecurityGroup"}]}}, "CPUAlarmHigh": {"Type": "AWS::CloudWatch::Alarm", "Properties": {"AlarmDescription": "Alarm if CPU too high", "Namespace": "AWS/EC2", "MetricName": "CPUUtilization", "Dimensions": [{"Name": "AutoScalingGroupName", "Value": {"Ref": "WebServerAutoScalingGroup"}}], "Statistic": "Average", "Period": "60", "EvaluationPeriods": "2", "Threshold": "75", "ComparisonOperator": "GreaterThanThreshold", "AlarmActions": [{"Ref": "WebServerScaleUpPolicy"}, {"Ref": "NotificationTopic"}], "InsufficientDataActions": [], "OKActions": []}}, "CPUAlarmLow": {"Type": "AWS::CloudWatch::Alarm", "Properties": {"AlarmDescription": "Alarm if CPU too low", "Namespace": "AWS/EC2", "MetricName": "CPUUtilization", "Dimensions": [{"Name": "AutoScalingGroupName", "Value": {"Ref": "WebServerAutoScalingGroup"}}], "Statistic": "Average", "Period": "60", "EvaluationPeriods": "2", "Threshold": "25", "ComparisonOperator": "LessThanThreshold", "AlarmActions": [{"Ref": "WebServerScaleDownPolicy"}, {"Ref": "NotificationTopic"}], "InsufficientDataActions": [], "OKActions": []}}, "NotificationTopic": {"Type": "AWS::SNS::Topic", "Properties": {"Subscription": [{"Endpoint": {"Ref": "OperatorEmail"}, "Protocol": "email"}]}}, "WebServerScaleUpPolicy": {"Type": "AWS::AutoScaling::ScalingPolicy", "Properties": {"AdjustmentType": "ChangeInCapacity", "AutoScalingGroupName": {"Ref": "WebServerAutoScalingGroup"}, "Cooldown": "300", "ScalingAdjustment": "1"}}, "WebServerScaleDownPolicy": {"Type": "AWS::AutoScaling::ScalingPolicy", "Properties": {"AdjustmentType": "ChangeInCapacity", "AutoScalingGroupName": {"Ref": "WebServerAutoScalingGroup"}, "Cooldown": "300", "ScalingAdjustment": "-1"}}}, "Outputs": {"URL": {"Description": "URL of the sample website", "Value": {"Fn::GetAtt": ["WebAppELB", "DNSName"]}}}}