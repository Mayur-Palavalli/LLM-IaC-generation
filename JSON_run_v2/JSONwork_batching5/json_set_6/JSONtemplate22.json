{"AWSTemplateFormatVersion": "2010-09-09", "Description": "AWS CloudFormation Template for a load balanced, Auto Scaled sample website with scheduled actions.", "Resources": {"MyLoadBalancer": {"Type": "AWS::ElasticLoadBalancing::LoadBalancer", "Properties": {"AvailabilityZones": {"Fn::GetAZs": ""}, "Listeners": [{"LoadBalancerPort": "80", "InstancePort": "80", "Protocol": "HTTP"}], "HealthCheck": {"Target": "HTTP:80/", "Interval": "30", "Timeout": "5", "HealthyThreshold": "2", "UnhealthyThreshold": "2"}}}, "MyLaunchConfiguration": {"Type": "AWS::AutoScaling::LaunchConfiguration", "Properties": {"ImageId": "ami-0abcdef1234567890", "InstanceType": "t2.micro", "SecurityGroups": [{"Ref": "InstanceSecurityGroup"}]}}, "MyAutoScalingGroup": {"Type": "AWS::AutoScaling::AutoScalingGroup", "Properties": {"VPCZoneIdentifier": ["subnet-0bb1c79de3EXAMPLE"], "LaunchConfigurationName": {"Ref": "MyLaunchConfiguration"}, "MinSize": "1", "MaxSize": "3", "DesiredCapacity": "1", "Tags": [{"Key": "Name", "Value": "MyAutoScalingInstance", "PropagateAtLaunch": "true"}]}}, "ScaleUpPolicy": {"Type": "AWS::AutoScaling::ScalingPolicy", "Properties": {"AutoScalingGroupName": {"Ref": "MyAutoScalingGroup"}, "PolicyType": "TargetTrackingScaling", "TargetTrackingConfiguration": {"PredefinedMetricSpecification": {"PredefinedMetricType": "ASGAverageCPUUtilization"}, "TargetValue": 60.0}}}, "ScaleDownPolicy": {"Type": "AWS::AutoScaling::ScalingPolicy", "Properties": {"AutoScalingGroupName": {"Ref": "MyAutoScalingGroup"}, "PolicyType": "TargetTrackingScaling", "TargetTrackingConfiguration": {"PredefinedMetricSpecification": {"PredefinedMetricType": "ASGAverageCPUUtilization"}, "TargetValue": 30.0}}}, "ScheduledAction1": {"Type": "AWS::AutoScaling::ScheduledAction", "Properties": {"AutoScalingGroupName": {"Ref": "MyAutoScalingGroup"}, "DesiredCapacity": "2", "Recurrence": "0 6 * * *"}}, "ScheduledAction2": {"Type": "AWS::AutoScaling::ScheduledAction", "Properties": {"AutoScalingGroupName": {"Ref": "MyAutoScalingGroup"}, "DesiredCapacity": "1", "Recurrence": "0 18 * * *"}}, "InstanceSecurityGroup": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Enable HTTP access", "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "0.0.0.0/0"}]}}}}