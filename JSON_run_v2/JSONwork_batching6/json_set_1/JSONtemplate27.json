{"AWSTemplateFormatVersion": "2010-09-09", "Resources": {"DateMacroFunction": {"Type": "AWS::Lambda::Function", "Properties": {"Handler": "index.handler", "Role": {"Fn::GetAtt": ["DateMacroExecutionRole", "Arn"]}, "Code": {"ZipFile": {"Fn::Join": ["\n", ["import json", "import datetime", "from cfn_macro_decorator import cfn_macro", "", "@cfn_macro", "def handler(event, context):", "    params = event['resourceProperties']", "    action = params.get('action', 'current_date')", "    if action == 'current_date':", "        current_date = datetime.datetime.utcnow().isoformat()", "        return {'value': current_date}", "    elif action == 'add_days':", "        try:", "            days = int(params['days'])", "            current_date = datetime.datetime.utcnow()", "            future_date = current_date + datetime.timedelta(days=days)", "            return {'value': future_date.isoformat()}", "        except (ValueError, KeyError) as e:", "            return {'error': str(e)}", "    else:", "        return {'error': 'Unknown action provided'}"]]}}, "Timeout": 60, "Runtime": "python3.8"}}, "DateMacroExecutionRole": {"Type": "AWS::IAM::Role", "Properties": {"AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "lambda.amazonaws.com"}, "Action": "sts:AssumeRole"}]}, "Policies": [{"PolicyName": "DateMacroLambdaPolicy", "PolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"], "Resource": "*"}]}}]}}}, "Outputs": {"DateMacroFunctionArn": {"Description": "ARN of the date macro Lambda function", "Value": {"Fn::GetAtt": ["DateMacroFunction", "Arn"]}}}}