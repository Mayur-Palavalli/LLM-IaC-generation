{"AWSTemplateFormatVersion": "2010-09-09", "Description": "AWS CloudFormation template for a multi-az, load balanced, and auto-scaled Apache web server setup.", "Parameters": {"InstanceType": {"Description": "EC2 instance type", "Type": "String", "Default": "t2.micro"}, "OperatorEmail": {"Description": "Email address to notify on scaling events", "Type": "String"}, "WebServerCapacity": {"Description": "Desired number of web servers", "Type": "Number", "Default": "2"}, "SubnetIDs": {"Description": "Subnets for the Auto Scaling group and Load Balancer", "Type": "List<AWS::EC2::Subnet::Id>"}, "VPC": {"Description": "VPC ID for the resources", "Type": "AWS::EC2::VPC::Id"}}, "Mappings": {"AWSInstanceType2Arch": {"t2.micro": {"Arch": "HVM64"}}, "AWSRegionArch2AMI": {"us-east-1": {"HVM64": "ami-0ff8a91507f77f867"}}}, "Resources": {"WebServerSecurityGroup": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Enable HTTP access", "VpcId": {"Ref": "VPC"}, "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "0.0.0.0/0"}]}}, "WebServerAutoScalingGroup": {"Type": "AWS::AutoScaling::AutoScalingGroup", "Properties": {"VPCZoneIdentifier": {"Ref": "SubnetIDs"}, "LaunchConfigurationName": {"Ref": "LaunchConfig"}, "MinSize": "1", "MaxSize": "5", "DesiredCapacity": {"Ref": "WebServerCapacity"}, "TargetGroupARNs": [{"Ref": "WebServerTargetGroup"}], "HealthCheckType": "EC2", "HealthCheckGracePeriod": 300}}, "LaunchConfig": {"Type": "AWS::AutoScaling::LaunchConfiguration", "Properties": {"ImageId": {"Fn::FindInMap": ["AWSRegionArch2AMI", {"Ref": "AWS::Region"}, {"Fn::FindInMap": ["AWSInstanceType2Arch", {"Ref": "InstanceType"}, "Arch"]}]}, "InstanceType": {"Ref": "InstanceType"}, "SecurityGroups": [{"Ref": "WebServerSecurityGroup"}], "UserData": {"Fn::Base64": {"Fn::Join": ["", ["#!/bin/bash\n", "yum update -y\n", "yum install -y httpd\n", "service httpd start\n", "chkconfig httpd on\n", "echo \"<html><h1>Welcome to the sample web server</h1></html>\" > /var/www/html/index.html\n"]]}}}}, "WebServerTargetGroup": {"Type": "AWS::ElasticLoadBalancingV2::TargetGroup", "Properties": {"HealthCheckIntervalSeconds": 30, "HealthCheckPath": "/", "HealthCheckProtocol": "HTTP", "HealthCheckTimeoutSeconds": 5, "HealthyThresholdCount": 5, "UnhealthyThresholdCount": 2, "TargetType": "instance", "Port": 80, "Protocol": "HTTP", "VpcId": {"Ref": "VPC"}}}, "LoadBalancer": {"Type": "AWS::ElasticLoadBalancingV2::LoadBalancer", "Properties": {"Name": "WebServerLoadBalancer", "Subnets": {"Ref": "SubnetIDs"}, "SecurityGroups": [{"Ref": "WebServerSecurityGroup"}]}}, "Listener": {"Type": "AWS::ElasticLoadBalancingV2::Listener", "Properties": {"DefaultActions": [{"Type": "forward", "TargetGroupArn": {"Ref": "WebServerTargetGroup"}}], "LoadBalancerArn": {"Ref": "LoadBalancer"}, "Port": "80", "Protocol": "HTTP"}}, "ScaleUpPolicy": {"Type": "AWS::AutoScaling::ScalingPolicy", "Properties": {"AdjustmentType": "ChangeInCapacity", "AutoScalingGroupName": {"Ref": "WebServerAutoScalingGroup"}, "Cooldown": "300", "ScalingAdjustment": "1"}}, "ScaleDownPolicy": {"Type": "AWS::AutoScaling::ScalingPolicy", "Properties": {"AdjustmentType": "ChangeInCapacity", "AutoScalingGroupName": {"Ref": "WebServerAutoScalingGroup"}, "Cooldown": "300", "ScalingAdjustment": "-1"}}, "CPUAlarmHigh": {"Type": "AWS::CloudWatch::Alarm", "Properties": {"AlarmDescription": "Alarm if CPU utilization is too high", "Namespace": "AWS/EC2", "MetricName": "CPUUtilization", "Dimensions": [{"Name": "AutoScalingGroupName", "Value": {"Ref": "WebServerAutoScalingGroup"}}], "Statistic": "Average", "Period": 60, "EvaluationPeriods": 3, "Threshold": 70, "ComparisonOperator": "GreaterThanThreshold", "AlarmActions": [{"Ref": "ScaleUpPolicy"}], "InsufficientDataActions": []}}, "CPUAlarmLow": {"Type": "AWS::CloudWatch::Alarm", "Properties": {"AlarmDescription": "Alarm if CPU utilization is too low", "Namespace": "AWS/EC2", "MetricName": "CPUUtilization", "Dimensions": [{"Name": "AutoScalingGroupName", "Value": {"Ref": "WebServerAutoScalingGroup"}}], "Statistic": "Average", "Period": 60, "EvaluationPeriods": 3, "Threshold": 20, "ComparisonOperator": "LessThanThreshold", "AlarmActions": [{"Ref": "ScaleDownPolicy"}], "InsufficientDataActions": []}}, "NotificationTopic": {"Type": "AWS::SNS::Topic", "Properties": {"Subscription": [{"Endpoint": {"Ref": "OperatorEmail"}, "Protocol": "email"}]}}, "NotificationTopicPolicy": {"Type": "AWS::SNS::TopicPolicy", "Properties": {"Topics": [{"Ref": "NotificationTopic"}], "PolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"AWS": "*"}, "Action": "SNS:Publish", "Resource": {"Ref": "NotificationTopic"}, "Condition": {"ArnEquals": {"aws:SourceArn": "*"}}}]}}}}, "Outputs": {"LoadBalancerDNSName": {"Description": "DNS Name of the load balancer", "Value": {"Fn::GetAtt": ["LoadBalancer", "DNSName"]}}}}