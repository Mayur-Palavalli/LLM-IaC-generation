{"AWSTemplateFormatVersion": "2010-09-09", "Description": "AWS CloudFormation Sample Template ELBGuidedAutoScalingRollingUpdates: This template creates an auto scaling group behind a load balancer with a simple health check. The Auto Scaling launch configuration includes an update policy that will keep 2 instances running while doing an autoscaling rolling update. The update will roll forward only when the ELB health check detects an updated instance in-service.", "Resources": {"MyLoadBalancer": {"Type": "AWS::ElasticLoadBalancingV2::LoadBalancer", "Properties": {"Scheme": "internet-facing", "IpAddressType": "ipv4", "Subnets": [{"Ref": "Subnet1"}, {"Ref": "Subnet2"}]}}, "MyTargetGroup": {"Type": "AWS::ElasticLoadBalancingV2::TargetGroup", "Properties": {"HealthCheckIntervalSeconds": 30, "HealthCheckPath": "/", "HealthCheckProtocol": "HTTP", "HealthCheckTimeoutSeconds": 5, "HealthyThresholdCount": 2, "UnhealthyThresholdCount": 2, "TargetType": "instance", "VpcId": {"Ref": "VpcId"}}}, "MyListener": {"Type": "AWS::ElasticLoadBalancingV2::Listener", "Properties": {"DefaultActions": [{"Type": "forward", "TargetGroupArn": {"Ref": "MyTargetGroup"}}], "LoadBalancerArn": {"Ref": "MyLoadBalancer"}, "Port": 80, "Protocol": "HTTP"}}, "MyLaunchConfiguration": {"Type": "AWS::AutoScaling::LaunchConfiguration", "Properties": {"ImageId": "ami-0abcdef1234567890", "InstanceType": "t2.micro", "SecurityGroups": [{"Ref": "InstanceSecurityGroup"}]}}, "MyAutoScalingGroup": {"Type": "AWS::AutoScaling::AutoScalingGroup", "Properties": {"VPCZoneIdentifier": [{"Ref": "Subnet1"}, {"Ref": "Subnet2"}], "LaunchConfigurationName": {"Ref": "MyLaunchConfiguration"}, "MinSize": "2", "MaxSize": "4", "TargetGroupARNs": [{"Ref": "MyTargetGroup"}], "HealthCheckType": "ELB", "HealthCheckGracePeriod": 300}}, "UpdatePolicy": {"AutoScalingRollingUpdate": {"MinInstancesInService": 2, "MaxBatchSize": 1, "PauseTime": "PT4M", "WaitOnResourceSignals": true}}, "InstanceSecurityGroup": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Enable HTTP access via port 80", "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "0.0.0.0/0"}], "VpcId": {"Ref": "VpcId"}}}}, "Parameters": {"VpcId": {"Type": "AWS::EC2::VPC::Id", "Description": "The VPC ID that the security group should belong to."}, "Subnet1": {"Type": "AWS::EC2::Subnet::Id", "Description": "A subnet ID for the Load Balancer and Auto Scaling Group."}, "Subnet2": {"Type": "AWS::EC2::Subnet::Id", "Description": "Another subnet ID for the Load Balancer and Auto Scaling Group."}}, "Outputs": {"LoadBalancerDNSName": {"Description": "The DNS name of the load balancer", "Value": {"Fn::GetAtt": ["MyLoadBalancer", "DNSName"]}}}}