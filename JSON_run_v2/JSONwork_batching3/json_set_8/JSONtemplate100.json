{"AWSTemplateFormatVersion": "2010-09-09", "Description": "AWS CloudFormation Template for a load balanced, Auto Scaled sample website with secured instance traffic.", "Parameters": {"InstanceType": {"Description": "EC2 instance type", "Type": "String", "Default": "t2.micro", "AllowedValues": ["t2.micro", "t2.small", "t2.medium", "m4.large"], "ConstraintDescription": "must be a valid EC2 instance type."}, "KeyName": {"Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances", "Type": "AWS::EC2::KeyPair::KeyName", "ConstraintDescription": "must be the name of an existing EC2 KeyPair."}, "InstancePort": {"Description": "The port on which the application is running", "Type": "Number", "Default": 8888}}, "Resources": {"WebServerSecurityGroup": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Enable HTTP access via port 80 locked down to the load balancer only", "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": {"Ref": "InstancePort"}, "ToPort": {"Ref": "InstancePort"}, "SourceSecurityGroupId": {"Ref": "LoadBalancerSecurityGroup"}}]}}, "LoadBalancerSecurityGroup": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Enable HTTP access via port 80", "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": 80, "ToPort": 80, "CidrIp": "0.0.0.0/0"}]}}, "WebServerLaunchConfiguration": {"Type": "AWS::AutoScaling::LaunchConfiguration", "Properties": {"ImageId": "ami-0c55b159cbfafe1f0", "InstanceType": {"Ref": "InstanceType"}, "KeyName": {"Ref": "KeyName"}, "SecurityGroups": [{"Ref": "WebServerSecurityGroup"}], "UserData": {"Fn::Base64": {"Fn::Join": ["", ["#!/bin/bash -xe\n", "yum install -y httpd\n", "service httpd start\n", "chkconfig httpd on\n", "echo '<html><h1>Test Page</h1></html>' > /var/www/html/index.html\n"]]}}}}, "WebServerAutoScalingGroup": {"Type": "AWS::AutoScaling::AutoScalingGroup", "Properties": {"LaunchConfigurationName": {"Ref": "WebServerLaunchConfiguration"}, "MinSize": "1", "MaxSize": "3", "DesiredCapacity": "2", "VPCZoneIdentifier": ["subnet-12345678"], "TargetGroupARNs": [{"Ref": "WebServerTargetGroup"}], "HealthCheckGracePeriod": 300, "HealthCheckType": "EC2"}}, "WebServerTargetGroup": {"Type": "AWS::ElasticLoadBalancingV2::TargetGroup", "Properties": {"HealthCheckIntervalSeconds": 30, "HealthCheckProtocol": "HTTP", "HealthCheckTimeoutSeconds": 5, "HealthyThresholdCount": 5, "UnhealthyThresholdCount": 2, "Matcher": {"HttpCode": "200"}, "Port": 8888, "Protocol": "HTTP", "VpcId": "vpc-12345678"}}, "WebServerLoadBalancer": {"Type": "AWS::ElasticLoadBalancingV2::LoadBalancer", "Properties": {"SecurityGroups": [{"Ref": "LoadBalancerSecurityGroup"}], "Subnets": ["subnet-12345678", "subnet-87654321"], "Scheme": "internet-facing"}}, "LoadBalancerListener": {"Type": "AWS::ElasticLoadBalancingV2::Listener", "Properties": {"DefaultActions": [{"Type": "forward", "TargetGroupArn": {"Ref": "WebServerTargetGroup"}}], "LoadBalancerArn": {"Ref": "WebServerLoadBalancer"}, "Port": 80, "Protocol": "HTTP"}}}, "Outputs": {"LoadBalancerDNSName": {"Description": "DNS name of the load balancer", "Value": {"Fn::GetAtt": ["WebServerLoadBalancer", "DNSName"]}}}}