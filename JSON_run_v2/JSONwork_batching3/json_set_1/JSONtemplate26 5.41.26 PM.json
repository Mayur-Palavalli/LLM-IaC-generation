{"AWSTemplateFormatVersion": "2010-09-09", "Transform": ["AWS::Serverless-2016-10-31"], "Description": "A CloudFormation template that includes a Lambda-backed custom resource for date manipulation.", "Resources": {"DateMacroLambdaExecutionRole": {"Type": "AWS::IAM::Role", "Properties": {"AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "lambda.amazonaws.com"}, "Action": "sts:AssumeRole"}]}, "Policies": [{"PolicyName": "root", "PolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"], "Resource": "arn:aws:logs:*:*:*"}]}}]}}, "DateMacroLambdaFunction": {"Type": "AWS::Lambda::Function", "Properties": {"Code": {"ZipFile": {"Fn::Join": ["\n", ["import json", "import datetime", "def lambda_handler(event, context):", "    # Get the current operation from the request", "    operation = event['RequestType']", "    # Today's date", "    today = datetime.date.today()", "    if operation == 'GetDate':", "        return {'Date': str(today)}", "    # Example operation: add days to the current date", "    elif operation == 'AddDays':", "        days = int(event['ResourceProperties']['Days'])", "        new_date = today + datetime.timedelta(days=days)", "        return {'Date': str(new_date)}", "    else:", "        return {'Message': 'Operation not supported'}"]]}}, "Handler": "index.lambda_handler", "Role": {"Fn::GetAtt": ["DateMacroLambdaExecutionRole", "Arn"]}, "Runtime": "python3.8", "Timeout": "300"}}, "DateMacroCustomResource": {"Type": "AWS::CloudFormation::CustomResource", "Properties": {"ServiceToken": {"Fn::GetAtt": ["DateMacroLambdaFunction", "Arn"]}}}}, "Outputs": {"DateOutput": {"Description": "Today's Date or Modified Date", "Value": {"Fn::GetAtt": ["DateMacroCustomResource", "Date"]}}}}