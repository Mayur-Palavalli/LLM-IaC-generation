{"AWSTemplateFormatVersion": "2010-09-09", "Resources": {"DateMacro": {"Type": "AWS::CloudFormation::Macro", "Properties": {"Name": "DateMacro", "FunctionName": {"Ref": "LambdaFunction"}}}, "LambdaFunction": {"Type": "AWS::Lambda::Function", "Properties": {"Handler": "index.handler", "Role": {"Fn::GetAtt": ["LambdaExecutionRole", "Arn"]}, "Code": {"ZipFile": {"Fn::Join": ["", ["import json\n", "import dateutil.parser\n", "import datetime\n\n", "def handler(event, context):\n", "    template = event['fragment']\n", "    for key, value in template.items():\n", "        if isinstance(value, dict):\n", "            template[key] = process_dict(value)\n", "    return {\n", "        'requestId': event['requestId'],\n", "        'status': 'success',\n", "        'fragment': template\n", "    }\n\n", "def process_dict(d):\n", "    for key, value in d.items():\n", "        if key == '!GetCurrentDate':\n", "            d[key] = get_current_date(value)\n", "        elif key == '!DateAdd':\n", "            d[key] = date_add(value)\n", "        elif isinstance(value, dict):\n", "            d[key] = process_dict(value)\n", "    return d\n\n", "def get_current_date(params):\n", "    format = params.get('Format', '%Y-%m-%d')\n", "    return datetime.datetime.now().strftime(format)\n\n", "def date_add(params):\n", "    date = dateutil.parser.parse(params['Date'])\n", "    delta = datetime.timedelta(**params['Delta'])\n", "    new_date = date + delta\n", "    format = params.get('Format', '%Y-%m-%d')\n", "    return new_date.strftime(format)\n"]]}}, "Runtime": "python3.8", "Timeout": 60}}, "LambdaExecutionRole": {"Type": "AWS::IAM::Role", "Properties": {"AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "lambda.amazonaws.com"}, "Action": "sts:AssumeRole"}]}, "Policies": [{"PolicyName": "LambdaExecutionPolicy", "PolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"], "Resource": "*"}]}}]}}}}