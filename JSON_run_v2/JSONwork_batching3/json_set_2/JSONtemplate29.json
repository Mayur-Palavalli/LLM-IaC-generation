{"AWSTemplateFormatVersion": "2010-09-09", "Resources": {"DateMacroLambda": {"Type": "AWS::Lambda::Function", "Properties": {"Handler": "index.handler", "Role": {"Fn::GetAtt": ["LambdaExecutionRole", "Arn"]}, "Code": {"ZipFile": {"Fn::Join": ["\n", ["import json", "import datetime", "", "def handler(event, context):", "    function = event['params']['Function']", "    result = None", "", "    if function == 'get_current_date':", "        result = get_current_date()", "    elif function == 'add_days':", "        days = int(event['params']['days'])", "        result = add_days(days)", "", "    return result", "", "def get_current_date():", "    return datetime.date.today().isoformat()", "", "def add_days(days):", "    new_date = datetime.date.today() + datetime.timedelta(days=days)", "    return new_date.isoformat()"]]}}, "Runtime": "python3.8", "Timeout": 30}}, "LambdaExecutionRole": {"Type": "AWS::IAM::Role", "Properties": {"AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "lambda.amazonaws.com"}, "Action": "sts:AssumeRole"}]}, "Policies": [{"PolicyName": "LambdaExecutionPolicy", "PolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"], "Resource": "*"}]}}]}}, "DateMacro": {"Type": "AWS::CloudFormation::Macro", "Properties": {"FunctionName": {"Ref": "DateMacroLambda"}, "Name": "DateMacro"}}}}