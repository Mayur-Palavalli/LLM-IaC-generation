{"AWSTemplateFormatVersion": "2010-09-09", "Description": "AWS CloudFormation template for a load balancer and an auto-scaling group for a sample website.", "Resources": {"SampleWebsiteBucket": {"Type": "AWS::S3::Bucket", "Properties": {"BucketName": "SampleWebsiteBucket", "OwnershipControls": {"Rules": [{"ObjectOwnership": "BucketOwnerPreferred"}]}}, "BucketPolicy": {"Type": "AWS::S3::BucketPolicy", "Properties": {"Bucket": {"Ref": "SampleWebsiteBucket"}, "PolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "delivery.logs.amazonaws.com"}, "Action": "s3:PutObject", "Resource": {"Fn::Sub": "arn:aws:s3:::${SampleWebsiteBucket}/*"}, "Condition": {"StringEquals": {"s3:x-amz-acl": "log-delivery-write"}}}]}}}}, "SampleElasticLoadBalancer": {"Type": "AWS::ElasticLoadBalancing::LoadBalancer", "Properties": {"LoadBalancerName": "SampleELB", "CrossZone": true, "Listeners": [{"LoadBalancerPort": "80", "InstancePort": "80", "Protocol": "HTTP"}], "ConnectionDrainingPolicy": {"Enabled": true, "Timeout": 300}, "AccessLoggingPolicy": {"Enabled": true, "S3BucketName": {"Ref": "SampleWebsiteBucket"}, "EmitInterval": 60}, "HealthCheck": {"Target": "HTTP:80/", "HealthyThreshold": "3", "UnhealthyThreshold": "5", "Interval": "30", "Timeout": "5"}}}, "SampleAutoScalingGroup": {"Type": "AWS::AutoScaling::AutoScalingGroup", "Properties": {"AvailabilityZones": {"Fn::GetAZs": ""}, "LaunchConfigurationName": {"Ref": "SampleLaunchConfig"}, "MinSize": "1", "MaxSize": "4", "LoadBalancerNames": [{"Ref": "SampleElasticLoadBalancer"}], "HealthCheckType": "ELB", "HealthCheckGracePeriod": 300}}, "SampleLaunchConfig": {"Type": "AWS::AutoScaling::LaunchConfiguration", "Properties": {"ImageId": "ami-0c55b159cbfafe1f0", "InstanceType": "t2.micro", "SecurityGroups": [{"Ref": "InstanceSecurityGroup"}], "UserData": {"Fn::Base64": "#!/bin/bash\necho \"Hello World\" > /var/www/html/index.html\nservice httpd start"}}}, "InstanceSecurityGroup": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Enable HTTP access", "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": 80, "ToPort": 80, "CidrIp": "0.0.0.0/0"}]}}}, "Outputs": {"LoadBalancerURL": {"Description": "URL of the sample website", "Value": {"Fn::GetAtt": ["SampleElasticLoadBalancer", "DNSName"]}}}}