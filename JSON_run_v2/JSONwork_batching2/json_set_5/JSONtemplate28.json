{"Resources": {"DateFunctionLambda": {"Type": "AWS::Lambda::Function", "Properties": {"Handler": "index.handler", "Role": {"Fn::GetAtt": ["LambdaExecutionRole", "Arn"]}, "Code": {"ZipFile": "import json\nimport datetime\n\ndef handler(event, context):\n    operation = event.get('operation')\n    if operation == 'current_date':\n        return json.dumps({ 'current_date': datetime.datetime.utcnow().isoformat() })\n    elif operation == 'date_math':\n        start_date = event.get('start_date')\n        delta_days = event.get('delta_days', 0)\n        delta_seconds = event.get('delta_seconds', 0)\n        new_date = (datetime.datetime.strptime(start_date, '%Y-%m-%d') + datetime.timedelta(days=delta_days, seconds=delta_seconds)).isoformat()\n        return json.dumps({ 'new_date': new_date })\n    else:\n        return { 'error': 'Unsupported operation' }\n"}, "Runtime": "python3.9", "Timeout": 10, "FunctionName": "DateFunctionLambda"}}, "LambdaExecutionRole": {"Type": "AWS::IAM::Role", "Properties": {"AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "lambda.amazonaws.com"}, "Action": "sts:AssumeRole"}]}, "Policies": [{"PolicyName": "LambdaBasicExecution", "PolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"], "Resource": "*"}]}}]}}, "DateFunctionMacro": {"Type": "AWS::CloudFormation::Macro", "Properties": {"Name": "DateFunctionMacro", "Description": "Macro to provide date functions in CloudFormation", "FunctionName": {"Ref": "DateFunctionLambda"}}}}}