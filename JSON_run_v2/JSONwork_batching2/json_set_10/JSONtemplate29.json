{"AWSTemplateFormatVersion": "2010-09-09", "Resources": {"DateMacro": {"Type": "AWS::Lambda::Function", "Properties": {"Handler": "index.handler", "Role": {"Fn::GetAtt": ["LambdaExecutionRole", "Arn"]}, "Code": {"ZipFile": {"Fn::Join": ["\n", ["import json", "import datetime", "", "def handler(event, context):", "    current_date = datetime.datetime.now()", "    action = event.get('action', '')", "    days = event.get('days', 0)", "    result = {}", "", "    if action == 'add':", "        result['date'] = (current_date + datetime.timedelta(days=days)).isoformat()", "    elif action == 'subtract':", "        result['date'] = (current_date - datetime.timedelta(days=days)).isoformat()", "    else:", "        result['error'] = 'Invalid action'", "", "    return {", "        'statusCode': 200,", "        'body': json.dumps(result)", "    }"]]}}, "Runtime": "python3.8", "Timeout": 60, "MemorySize": 128}}, "LambdaExecutionRole": {"Type": "AWS::IAM::Role", "Properties": {"AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "lambda.amazonaws.com"}, "Action": "sts:AssumeRole"}]}, "Policies": [{"PolicyName": "LambdaExecutionPolicy", "PolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"], "Resource": "*"}, {"Effect": "Allow", "Action": ["lambda:InvokeFunction"], "Resource": "*"}]}}]}}}}