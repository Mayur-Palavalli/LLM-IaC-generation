{"AWSTemplateFormatVersion": "2010-09-09", "Description": "Multi-AZ, Load balanced and Auto Scaled sample web site running on an Apache Web Server.", "Parameters": {"OperatorEmail": {"Type": "String", "Description": "Email address to notify on scaling events."}, "InstanceType": {"Type": "String", "Default": "t2.micro", "AllowedValues": ["t2.micro", "t2.small", "t2.medium"], "Description": "EC2 instance type"}}, "Mappings": {"RegionMap": {"us-east-1": {"AMI": "ami-0ff8a91507f77f867"}, "us-west-1": {"AMI": "ami-0bdb828fd58c52235"}, "us-west-2": {"AMI": "ami-a0cfeed8"}}}, "Resources": {"WebServerRole": {"Type": "AWS::IAM::Role", "Properties": {"AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "ec2.amazonaws.com"}, "Action": "sts:AssumeRole"}]}, "Path": "/", "Policies": [{"PolicyName": "WebServerPolicy", "PolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"], "Resource": "*"}]}}]}}, "InstanceProfile": {"Type": "AWS::IAM::InstanceProfile", "Properties": {"Path": "/", "Roles": [{"Ref": "WebServerRole"}]}}, "WebServerLaunchConfiguration": {"Type": "AWS::AutoScaling::LaunchConfiguration", "Properties": {"ImageId": {"Fn::FindInMap": ["RegionMap", {"Ref": "AWS::Region"}, "AMI"]}, "InstanceType": {"Ref": "InstanceType"}, "IamInstanceProfile": {"Ref": "InstanceProfile"}, "SecurityGroups": [{"Ref": "WebServerSecurityGroup"}], "UserData": {"Fn::Base64": {"Fn::Join": ["", ["#!/bin/bash\n", "yum update -y\n", "yum install -y httpd\n", "service httpd start\n", "chkconfig httpd on\n", "echo \"<html><h1>Welcome to the Sample Web Server</h1></html>\" > /var/www/html/index.html\n"]]}}}}, "WebServerAutoScalingGroup": {"Type": "AWS::AutoScaling::AutoScalingGroup", "Properties": {"VPCZoneIdentifier": {"Ref": "Subnets"}, "LaunchConfigurationName": {"Ref": "WebServerLaunchConfiguration"}, "MinSize": "1", "MaxSize": "5", "DesiredCapacity": "2", "TargetGroupARNs": [{"Ref": "WebServerTargetGroup"}], "HealthCheckType": "EC2", "HealthCheckGracePeriod": 300}, "CreationPolicy": {"ResourceSignal": {"Timeout": "PT15M"}}, "UpdatePolicy": {"AutoScalingRollingUpdate": {"MinInstancesInService": "1", "MaxBatchSize": "1", "PauseTime": "PT15M"}}}, "CPUAlarmHigh": {"Type": "AWS::CloudWatch::Alarm", "Properties": {"AlarmDescription": "Alarm if CPU utilization is too high", "Namespace": "AWS/EC2", "MetricName": "CPUUtilization", "Dimensions": [{"Name": "AutoScalingGroupName", "Value": {"Ref": "WebServerAutoScalingGroup"}}], "Statistic": "Average", "Period": "300", "EvaluationPeriods": "1", "Threshold": "60", "ComparisonOperator": "GreaterThanThreshold", "AlarmActions": [{"Ref": "WebServerScaleUpPolicy"}, {"Ref": "AlarmTopic"}]}}, "CPUAlarmLow": {"Type": "AWS::CloudWatch::Alarm", "Properties": {"AlarmDescription": "Alarm if CPU utilization is too low", "Namespace": "AWS/EC2", "MetricName": "CPUUtilization", "Dimensions": [{"Name": "AutoScalingGroupName", "Value": {"Ref": "WebServerAutoScalingGroup"}}], "Statistic": "Average", "Period": "300", "EvaluationPeriods": "1", "Threshold": "40", "ComparisonOperator": "LessThanThreshold", "AlarmActions": [{"Ref": "WebServerScaleDownPolicy"}, {"Ref": "AlarmTopic"}]}}, "WebServerScaleUpPolicy": {"Type": "AWS::AutoScaling::ScalingPolicy", "Properties": {"AutoScalingGroupName": {"Ref": "WebServerAutoScalingGroup"}, "PolicyType": "SimpleScaling", "AdjustmentType": "ChangeInCapacity", "ScalingAdjustment": "1", "Cooldown": "300"}}, "WebServerScaleDownPolicy": {"Type": "AWS::AutoScaling::ScalingPolicy", "Properties": {"AutoScalingGroupName": {"Ref": "WebServerAutoScalingGroup"}, "PolicyType": "SimpleScaling", "AdjustmentType": "ChangeInCapacity", "ScalingAdjustment": "-1", "Cooldown": "300"}}, "WebServerTargetGroup": {"Type": "AWS::ElasticLoadBalancingV2::TargetGroup", "Properties": {"HealthCheckPath": "/", "HealthCheckIntervalSeconds": 30, "HealthCheckProtocol": "HTTP", "HealthCheckTimeoutSeconds": 5, "HealthyThresholdCount": 2, "UnhealthyThresholdCount": 2, "Matcher": {"HttpCode": "200"}, "Port": 80, "Protocol": "HTTP", "VpcId": {"Ref": "VPC"}}}, "WebServerLoadBalancer": {"Type": "AWS::ElasticLoadBalancingV2::LoadBalancer", "Properties": {"Name": "WebServer-LB", "Subnets": {"Ref": "Subnets"}, "SecurityGroups": [{"Ref": "LoadBalancerSecurityGroup"}], "Scheme": "internet-facing", "LoadBalancerAttributes": [{"Key": "idle_timeout.timeout_seconds", "Value": "60"}]}}, "WebServerListener": {"Type": "AWS::ElasticLoadBalancingV2::Listener", "Properties": {"DefaultActions": [{"Type": "forward", "TargetGroupArn": {"Ref": "WebServerTargetGroup"}}], "LoadBalancerArn": {"Ref": "WebServerLoadBalancer"}, "Port": 80, "Protocol": "HTTP"}}, "AlarmTopic": {"Type": "AWS::SNS::Topic", "Properties": {"Subscription": [{"Endpoint": {"Ref": "OperatorEmail"}, "Protocol": "email"}]}}, "LoadBalancerSecurityGroup": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Enable HTTP access on the inbound port", "VpcId": {"Ref": "VPC"}, "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "0.0.0.0/0"}]}}, "WebServerSecurityGroup": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Enable HTTP access from the load balancer only", "VpcId": {"Ref": "VPC"}, "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "SourceSecurityGroupId": {"Ref": "LoadBalancerSecurityGroup"}}]}}, "Subnets": {"Type": "List<AWS::EC2::Subnet::Id>", "Default": ["subnet-12345678", "subnet-87654321"], "Description": "Subnets to use for the Auto Scaling Group"}, "VPC": {"Type": "AWS::EC2::VPC::Id"}}, "Outputs": {"LoadBalancerDNSName": {"Description": "The DNS name of the load balancer", "Value": {"Fn::GetAtt": ["WebServerLoadBalancer", "DNSName"]}}}}