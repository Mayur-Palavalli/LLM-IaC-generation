{"AWSTemplateFormatVersion": "2010-09-09", "Resources": {"TableDefinition": {"Type": "AWS::IAM::Role", "Properties": {"AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "lambda.amazonaws.com"}, "Action": "sts:AssumeRole"}]}, "Policies": [{"PolicyName": "LambdaExecutionPolicy", "PolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Action": ["dynamodb:CreateTable", "dynamodb:DescribeTable", "dynamodb:UpdateTable", "dynamodb:PutItem", "dynamodb:GetItem", "dynamodb:Scan", "dynamodb:DeleteTable"], "Resource": "*"}]}}]}}, "DynamoDBTableLambda": {"Type": "AWS::Lambda::Function", "Properties": {"Handler": "index.handler", "Role": {"Fn::GetAtt": ["TableDefinition", "Arn"]}, "Runtime": "nodejs14.x", "Code": {"ZipFile": {"Fn::Join": ["\n", ["const AWS = require('aws-sdk');", "const dynamo = new AWS.DynamoDB();", "", "exports.handler = async () => {", "  const tables = [", "    { TableName: 'Table1', AttributeDefinitions: [{ AttributeName: 'Id', AttributeType: 'S' }], KeySchema: [{ AttributeName: 'Id', KeyType: 'HASH' }] },", "    { TableName: 'Table2', AttributeDefinitions: [{ AttributeName: 'Id', AttributeType: 'S' }], KeySchema: [{ AttributeName: 'Id', KeyType: 'HASH' }] },", "    { TableName: 'Table3', AttributeDefinitions: [{ AttributeName: 'Id', AttributeType: 'S' }], KeySchema: [{ AttributeName: 'Id', KeyType: 'HASH' }] }", "  ];", "", "  for (const table of tables) {", "    const params = {", "      AttributeDefinitions: table.AttributeDefinitions,", "      KeySchema: table.KeySchema,", "      ProvisionedThroughput: {", "        ReadCapacityUnits: 5,", "        WriteCapacityUnits: 5", "      },", "      TableName: table.TableName", "    };", "", "    try {", "      await dynamo.createTable(params).promise();", "      console.log(`Table ${table.TableName} created successfully`);", "    } catch (error) {", "      console.error(`Error creating table ${table.TableName}: `, error);", "    }", "  }", "};"]]}}}}}}